{"ast":null,"code":"var _jsxFileName = \"/Users/ryandawkes/Desktop/frontend/src/Components/ChartComponentTest/Chart.js\";\n// import React, {Component} from 'react';\n// import {Bar} from 'react-chartjs-2';\n// import './barChart.css'\n//\n// export class Chart extends Component{\n//     // Constructs state of chart based on data passed through props\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             chartData:props.chartData\n//         }\n//     }\n//\n//     // Default/initial props for chart\n//     static defaultProps = {\n//         displayTitle:true,\n//         displayLegend: true,\n//         legendPosition:'right',\n//         view:'Category'\n//     }\n//\n//     render(){\n//         return (\n//             <div className=\"chart\">\n//                 <Bar\n//                     data={this.state.chartData}\n//                     options={{\n//                         title:{\n//                             display:this.props.displayTitle,\n//                             text: this.props.view,\n//                             fontSize:25\n//                         }\n//                     }}\n//                 />\n//             </div>\n//         )\n//     }\n// }\n//\n// export default Chart;\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nimport './barChart.css';\nimport classes from '../Examples/DashboardChartTest/LineGraph/LineGraph.module.css';\nlet myBarChart; // Font Style\n\nChart.defaults.global.defaultFontFamily = \"'Montserrat', sans-serif\"; // Hides Legend\n\nChart.defaults.global.legend.display = false; //--ChartEx Style Options--//\n\nexport default class ExampleChart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n\n    this.buildChart = () => {\n      const myChartRef = this.chartRef.current.getContext(\"2d\");\n      const {\n        title,\n        data,\n        labels,\n        barColours\n      } = this.props;\n      if (typeof myBarChart !== \"undefined\") myBarChart.destroy();\n      myBarChart = new Chart(myChartRef, {\n        type: \"bar\",\n        title: title,\n        data: {\n          labels: labels,\n          datasets: [{\n            label: \"Sales\",\n            data: data,\n            fill: true,\n            backgroundColor: barColours\n          }]\n        },\n        options: {}\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  componentDidUpdate() {\n    this.buildChart();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.graphContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/ryandawkes/Desktop/frontend/src/Components/ChartComponentTest/Chart.js"],"names":["React","Component","Chart","classes","myBarChart","defaults","global","defaultFontFamily","legend","display","ExampleChart","chartRef","createRef","buildChart","myChartRef","current","getContext","title","data","labels","barColours","props","destroy","type","datasets","label","fill","backgroundColor","options","componentDidMount","componentDidUpdate","render","graphContainer"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,+DAApB;AAEA,IAAIC,UAAJ,C,CAEA;;AACAF,KAAK,CAACG,QAAN,CAAeC,MAAf,CAAsBC,iBAAtB,GAA0C,0BAA1C,C,CACA;;AACAL,KAAK,CAACG,QAAN,CAAeC,MAAf,CAAsBE,MAAtB,CAA6BC,OAA7B,GAAuC,KAAvC,C,CACA;;AAEA,eAAe,MAAMC,YAAN,SAA2BT,SAA3B,CAAoC;AAAA;AAAA;AAAA,SAE/CU,QAF+C,GAEpCX,KAAK,CAACY,SAAN,EAFoC;;AAAA,SAY/CC,UAZ+C,GAYlC,MAAM;AACf,YAAMC,UAAU,GAAG,KAAKH,QAAL,CAAcI,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,UAAsC,KAAKC,KAAjD;AACA,UAAI,OAAOjB,UAAP,KAAsB,WAA1B,EAAuCA,UAAU,CAACkB,OAAX;AAEvClB,MAAAA,UAAU,GAAG,IAAIF,KAAJ,CAAUY,UAAV,EAAsB;AAC/BS,QAAAA,IAAI,EAAE,KADyB;AAE/BN,QAAAA,KAAK,EAAEA,KAFwB;AAG/BC,QAAAA,IAAI,EAAE;AACFC,UAAAA,MAAM,EAAEA,MADN;AAEFK,UAAAA,QAAQ,EAAE,CACN;AACIC,YAAAA,KAAK,EAAE,OADX;AAEIP,YAAAA,IAAI,EAAEA,IAFV;AAGIQ,YAAAA,IAAI,EAAE,IAHV;AAIIC,YAAAA,eAAe,EAAEP;AAJrB,WADM;AAFR,SAHyB;AAc/BQ,QAAAA,OAAO,EAAE;AAdsB,OAAtB,CAAb;AAkBH,KAnC8C;AAAA;;AAI/CC,EAAAA,iBAAiB,GAAI;AACjB,SAAKhB,UAAL;AACH;;AAEDiB,EAAAA,kBAAkB,GAAI;AAClB,SAAKjB,UAAL;AACH;;AA2BDkB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,GAAG,EAAE,KAAKrB,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AA3C8C","sourcesContent":["// import React, {Component} from 'react';\n// import {Bar} from 'react-chartjs-2';\n// import './barChart.css'\n//\n// export class Chart extends Component{\n//     // Constructs state of chart based on data passed through props\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             chartData:props.chartData\n//         }\n//     }\n//\n//     // Default/initial props for chart\n//     static defaultProps = {\n//         displayTitle:true,\n//         displayLegend: true,\n//         legendPosition:'right',\n//         view:'Category'\n//     }\n//\n//     render(){\n//         return (\n//             <div className=\"chart\">\n//                 <Bar\n//                     data={this.state.chartData}\n//                     options={{\n//                         title:{\n//                             display:this.props.displayTitle,\n//                             text: this.props.view,\n//                             fontSize:25\n//                         }\n//                     }}\n//                 />\n//             </div>\n//         )\n//     }\n// }\n//\n// export default Chart;\n\nimport React, {Component} from 'react';\nimport Chart from \"chart.js\";\nimport './barChart.css'\nimport classes from '../Examples/DashboardChartTest/LineGraph/LineGraph.module.css';\n\nlet myBarChart;\n\n// Font Style\nChart.defaults.global.defaultFontFamily = \"'Montserrat', sans-serif\"\n// Hides Legend\nChart.defaults.global.legend.display = false;\n//--ChartEx Style Options--//\n\nexport default class ExampleChart extends Component{\n\n    chartRef = React.createRef();\n\n    componentDidMount () {\n        this.buildChart();\n    }\n\n    componentDidUpdate () {\n        this.buildChart();\n    }\n\n    buildChart = () => {\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\n        const { title, data, labels, barColours } = this.props;\n        if (typeof myBarChart !== \"undefined\") myBarChart.destroy();\n\n        myBarChart = new Chart(myChartRef, {\n            type: \"bar\",\n            title: title,\n            data: {\n                labels: labels,\n                datasets: [\n                    {\n                        label: \"Sales\",\n                        data: data,\n                        fill: true,\n                        backgroundColor: barColours\n                    }\n                ]\n            },\n            options: {\n\n            }\n        });\n    }\n\n    render() {\n        return(\n            <div className={classes.graphContainer}>\n                <canvas id=\"myChart\" ref={this.chartRef} />\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}